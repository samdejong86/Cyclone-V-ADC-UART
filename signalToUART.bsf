/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 2016  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Intel and sold by Intel or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 16 16 304 192)
	(text "signalToUART" (rect 5 0 66 12)(font "Arial" ))
	(text "inst" (rect 8 160 20 172)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "clk" (rect 0 0 10 12)(font "Arial" ))
		(text "clk" (rect 21 27 31 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 1))
	)
	(port
		(pt 0 48)
		(input)
		(text "waveform[0..31][13..0]" (rect 0 0 88 12)(font "Arial" ))
		(text "waveform[0..31][13..0]" (rect 21 43 109 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 3))
	)
	(port
		(pt 0 64)
		(input)
		(text "acquire" (rect 0 0 28 12)(font "Arial" ))
		(text "acquire" (rect 21 59 49 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64)(line_width 1))
	)
	(port
		(pt 288 32)
		(output)
		(text "UART" (rect 0 0 29 12)(font "Arial" ))
		(text "UART" (rect 238 27 267 39)(font "Arial" ))
		(line (pt 288 32)(pt 272 32)(line_width 1))
	)
	(port
		(pt 288 48)
		(output)
		(text "startStop" (rect 0 0 35 12)(font "Arial" ))
		(text "startStop" (rect 232 43 267 55)(font "Arial" ))
		(line (pt 288 48)(pt 272 48)(line_width 1))
	)
	(port
		(pt 288 64)
		(output)
		(text "bitCounter[10..0]" (rect 0 0 63 12)(font "Arial" ))
		(text "bitCounter[10..0]" (rect 204 59 267 71)(font "Arial" ))
		(line (pt 288 64)(pt 272 64)(line_width 3))
	)
	(port
		(pt 288 80)
		(output)
		(text "waveformCounter[10..0]" (rect 0 0 96 12)(font "Arial" ))
		(text "waveformCounter[10..0]" (rect 171 75 267 87)(font "Arial" ))
		(line (pt 288 80)(pt 272 80)(line_width 3))
	)
	(port
		(pt 288 96)
		(output)
		(text "byteCounter[10..0]" (rect 0 0 73 12)(font "Arial" ))
		(text "byteCounter[10..0]" (rect 194 91 267 103)(font "Arial" ))
		(line (pt 288 96)(pt 272 96)(line_width 3))
	)
	(port
		(pt 288 112)
		(output)
		(text "whichByte[10..0]" (rect 0 0 63 12)(font "Arial" ))
		(text "whichByte[10..0]" (rect 204 107 267 119)(font "Arial" ))
		(line (pt 288 112)(pt 272 112)(line_width 3))
	)
	(port
		(pt 288 128)
		(output)
		(text "sample[13..0]" (rect 0 0 51 12)(font "Arial" ))
		(text "sample[13..0]" (rect 216 123 267 135)(font "Arial" ))
		(line (pt 288 128)(pt 272 128)(line_width 3))
	)
	(drawing
		(rectangle (rect 16 16 272 160)(line_width 1))
	)
)
